name: CI-CD-Pipeline-to-AWS-ElasticBeastalk
env:
  EB_S3_BUCKET_NAME   : "my-fast-api-bucket"
  EB_APPLICATION_NAME : "Myfastapi2"
  EB_ENVIRONMENT_NAME : "Myfastapi2-env"
  DEPLOY_PACKAGE_NAME : "fastapi_app_${{ github.sha }}.zip"
  AWS_REGION_NAME     : "eu-central-1"
  
on: 
  push:
    branches:
      - main

jobs:
  my_ci_part: 
    runs-on: ubuntu-latest
    
    steps:
    - name: Git clone my repos
      uses: actions/checkout@v1
    
    - name: EnvData to .env
      run: |
        echo ${{ secrets.ALGORITHMS }} >> .env 
        echo ${{ secrets.API_AUDIENCE }} >> .env 
        echo ${{ secrets.APPHOST }} >> .env
        echo ${{ secrets.APPPORT }} >> .env
        echo ${{ secrets.CLIENT_ID }} >> .env
        echo ${{ secrets.CLIENT_SECRET }} >> .env
        echo ${{ secrets.CONNECTION }} >> .env
        echo ${{ secrets.DOMAIN }} >> .env
        echo ${{ secrets.ISSUER }} >> .env
        echo ${{ secrets.MY_ALGORITHMS }} >> .env
        echo ${{ secrets.POSTGRES_DB }} >> .env
        echo ${{ secrets.POSTGRES_HOST }} >> .env
        echo ${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo ${{ secrets.POSTGRES_PORT }} >> .env
        echo ${{ secrets.POSTGRES_TEST_DB }} >> .env
        echo ${{ secrets.POSTGRES_USER }} >> .env
        echo ${{ secrets.SECRET }} >> .env
    
    - name: Create ZIP deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region           :  ${{ env.AWS_REGION_NAME }}
        
    - name: Copy deploy package to S3 bucket
      run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_S3_BUCKET_NAME }}/
      
    - name: Print Success for CI
      run: echo "CI Part Success"
      
  my_cd_part: 
      runs-on: ubuntu-latest
      needs: [my_ci_part]
      steps: 
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region          :  ${{ env.AWS_REGION_NAME }}
          
      - name: Create new ElasticBeanstalk Application
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
        
      - name: Deploy new ElasticBeanstalk App Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "ver-${{ github.sha }}"
        
      - name: Print Success for CD
        run: echo "CD Part Success"
          
          
          
          
          
          
        
        
        
